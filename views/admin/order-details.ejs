<%- include('../layouts/admin/header.ejs') %>

<div class="content-main">
    <div class="content-header">
        <div>
            <h2 class="content-title card-title">Order Details</h2>
            <p>Order ID: <%= order._id %></p>
        </div>
    </div>

    <div class="card mb-4">
        <div class="card-body">
            <!-- Customer Info -->
            <div class="mb-4">
                <h5 class="card-title mb-3">Customer Information</h5>
                <p><strong>Name:</strong> <%= order.userId.name %></p>
                <p><strong>Email:</strong> <%= order.userId.email %></p>
                <p><strong>Order Date:</strong> <%= new Date(order.createdOn).toLocaleString() %></p>
            </div>

            <!-- Shipping Address -->
            <div class="mb-4">
                <h5 class="card-title mb-3">Shipping Address</h5>
                <p><%= order.address.name %></p>
                <p><%= order.address.street %></p>
                <p><%= order.address.city %>, <%= order.address.state %> <%= order.address.pincode %></p>
                <p>Phone: <%= order.address.mobile %></p>
            </div>

            <!-- Order Items -->
            <div class="mb-4">
                <h5 class="card-title mb-3">Order Items</h5>
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Product</th>
                                <th>Image</th>
                                <th>Price</th>
                                <th>Quantity</th>
                                <th>Total</th>
                                <th>Status</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% order.orderedItems.forEach(item => { %>
                                <tr>
                                    <td><%= item.product.name %></td>
                                    <td>
                                        <img src="/uploads/re-image/<%= item.product.product_img[0] %>" 
                                             alt="<%= item.product.name %>"
                                             style="width: 50px; height: 50px; object-fit: cover;"
                                             onerror="this.src='/uploads/re-image/default.jpeg'">
                                    </td>
                                    <td>₹<%= item.product.Sale_price.toFixed(2) %></td>
                                    <td><%= item.quantity %></td>
                                    <td>₹<%= (item.product.Sale_price * item.quantity).toFixed(2) %></td>
                                    <td>
                                        <span class="status-badge badge <%= 
                                            item.status === 'Delivered' ? 'bg-success' :
                                            item.status === 'Cancelled' ? 'bg-danger' :
                                            item.status === 'Returned' ? 'bg-warning' :
                                            item.status === 'Shipped' ? 'bg-info' :
                                            item.status === 'Processing' ? 'bg-primary' :
                                            'bg-secondary' %>">
                                            <%= item.status %>
                                        </span>
                                    </td>
                                    <td>
                                        <% if (item.returnReason || item.returnRejectedReason) { %>
                                            <div class="return-request-card border rounded p-3 mb-3 bg-light">
                                                <div class="d-flex justify-content-between align-items-start">
                                                    <div>
                                                        <h6 class="mb-2 text-primary">
                                                            <% if (item.returnRejectedReason) { %>
                                                                <i class="fas fa-times-circle text-danger"></i> Return Rejected
                                                            <% } else if (item.status === 'Returned') { %>
                                                                <i class="fas fa-check-circle text-success"></i> Return Approved
                                                            <% } else { %>
                                                                <i class="fas fa-clock text-warning"></i> Return Request
                                                            <% } %>
                                                        </h6>
                                                        <div class="return-reason mb-2">
                                                            <small class="text-muted">Customer's Reason:</small>
                                                            <p class="mb-2"><%= item.returnReason || 'Return request rejected' %></p>
                                                            
                                                            <% if (item.returnRejectedReason) { %>
                                                                <small class="text-muted">Rejection Reason:</small>
                                                                <p class="mb-0 text-danger"><%= item.returnRejectedReason %></p>
                                                            <% } %>
                                                        </div>
                                                    </div>
                                                    <% if (item.status === 'Delivered' && !item.returnRejectedReason) { %>
                                                        <div class="btn-group">
                                                            <button onclick="confirmReturn('<%= order._id %>', '<%= item._id %>')" 
                                                                    class="btn btn-sm btn-success me-2">
                                                                <i class="fas fa-check me-1"></i> Approve
                                                            </button>
                                                            <button onclick="rejectReturn('<%= order._id %>', '<%= item._id %>')" 
                                                                    class="btn btn-sm btn-danger">
                                                                <i class="fas fa-times me-1"></i> Reject
                                                            </button>
                                                        </div>
                                                    <% } else if (item.status === 'Returned') { %>
                                                        <div class="return-status">
                                                            <span class="badge bg-success">
                                                                <i class="fas fa-check me-1"></i> Return Approved
                                                            </span>
                                                            <small class="d-block text-muted mt-1">
                                                                Inventory Updated
                                                            </small>
                                                        </div>
                                                    <% } %>
                                                </div>
                                            </div>
                                        <% } %>
                                        <% if (!['Cancelled', 'Returned'].includes(item.status)) { %>
                                            <select class="form-select form-select-sm item-status-select" 
                                                    data-order-id="<%= order._id %>" 
                                                    data-item-id="<%= item._id %>">
                                                <option value="Pending" <%= item.status === 'Pending' ? 'selected' : '' %>>Pending</option>
                                                <option value="Processing" <%= item.status === 'Processing' ? 'selected' : '' %>>Processing</option>
                                                <option value="Shipped" <%= item.status === 'Shipped' ? 'selected' : '' %>>Shipped</option>
                                                <option value="Delivered" <%= item.status === 'Delivered' ? 'selected' : '' %>>Delivered</option>
                                                <option value="Cancelled" <%= item.status === 'Cancelled' ? 'selected' : '' %>>Cancelled</option>
                                            </select>
                                        <% } %>
                                    </td>
                                </tr>
                            <% }); %>
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Order Summary -->
            <div class="mb-4">
                <h5 class="card-title mb-3">Order Summary</h5>
                <div class="row">
                    <div class="col-lg-3">
                        <p><strong>Subtotal:</strong> ₹<%= order.totalPrice.toFixed(2) %></p>
                        <% if (order.couponCode) { %>
                            <p>
                                <strong>Coupon Applied:</strong> 
                                <span class="badge bg-success"><%= order.couponCode %></span>
                            </p>
                            <p><strong>Discount:</strong> -₹<%= order.discountAmount.toFixed(2) %></p>
                        <% } %>
                        <p><strong>Shipping:</strong> Free</p>
                        <p class="fw-bold fs-5"><strong>Final Total:</strong> ₹<%= order.finalAmount.toFixed(2) %></p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add SweetAlert2 -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
document.querySelectorAll('.item-status-select').forEach(select => {
    select.addEventListener('change', async function() {
        const orderId = this.dataset.orderId;
        const itemId = this.dataset.itemId;
        const newStatus = this.value;
        const statusCell = this.closest('tr').querySelector('.status-badge');
        const originalStatus = statusCell.textContent.trim();

        try {
            const result = await Swal.fire({
                title: 'Update Status',
                text: `Are you sure you want to update this item's status to ${newStatus}?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, update it!'
            });

            if (result.isConfirmed) {
                const response = await fetch(`/admin/order/${orderId}/item/${itemId}/status`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Accept': 'application/json'
                    },
                    body: JSON.stringify({ status: newStatus })
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const data = await response.json();

                if (data.success) {
                    // Update the status badge
                    const badgeClass = 
                        newStatus === 'Delivered' ? 'bg-success' :
                        newStatus === 'Cancelled' ? 'bg-danger' :
                        newStatus === 'Returned' ? 'bg-warning' :
                        newStatus === 'Shipped' ? 'bg-info' :
                        newStatus === 'Processing' ? 'bg-primary' :
                        'bg-secondary';
                    
                    statusCell.className = `status-badge badge ${badgeClass}`;
                    statusCell.textContent = newStatus;

                    // Disable select if status is final
                    if (['Delivered', 'Cancelled', 'Returned'].includes(newStatus)) {
                        this.disabled = true;
                    }

                    // Show success message
                    await Swal.fire({
                        title: 'Updated!',
                        text: 'Item status has been updated successfully.',
                        icon: 'success',
                        timer: 1500
                    });

                    // Reload the page to reflect all changes
                    window.location.reload();
                } else {
                    throw new Error(data.message || 'Failed to update status');
                }
            } else {
                // Reset select to previous value if cancelled
                this.value = originalStatus;
            }
        } catch (error) {
            console.error('Error:', error);
            await Swal.fire({
                title: 'Error!',
                text: error.message || 'Failed to update status',
                icon: 'error'
            });
            // Reset select to previous value on error
            this.value = originalStatus;
        }
    });
});

function confirmReturn(orderId, itemId) {
    Swal.fire({
        title: 'Approve Return Request?',
        html: `
            <div class="text-start">
                <p class="mb-3">Are you sure you want to approve this return request?</p>
                <small class="text-muted">
                    This will:
                    <ul class="mt-2">
                        <li>Mark the item as Returned</li>
                        <li>Update inventory quantity</li>
                        <li>Close the return request</li>
                    </ul>
                </small>
            </div>
        `,
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#28a745',
        cancelButtonColor: '#6c757d',
        confirmButtonText: '<i class="fas fa-check me-1"></i> Yes, Approve Return',
        cancelButtonText: '<i class="fas fa-times me-1"></i> Cancel'
    }).then((result) => {
        if (result.isConfirmed) {
            updateOrderStatus(orderId, itemId, 'Returned');
        }
    });
}

function rejectReturn(orderId, itemId) {
    Swal.fire({
        title: 'Reject Return Request?',
        input: 'textarea',
        inputLabel: 'Rejection Reason (Optional)',
        inputPlaceholder: 'Enter a reason for rejecting the return...',
        html: `
            <div class="text-start">
                <p class="mb-3">Are you sure you want to reject this return request?</p>
                <small class="text-muted">The item will remain in Delivered status.</small>
            </div>
        `,
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#dc3545',
        cancelButtonColor: '#6c757d',
        confirmButtonText: '<i class="fas fa-times me-1"></i> Yes, Reject Return',
        cancelButtonText: 'Cancel'
    }).then((result) => {
        if (result.isConfirmed) {
            updateOrderStatus(orderId, itemId, 'Delivered', result.value);
        }
    });
}

function updateOrderStatus(orderId, itemId, status, rejectReason = null) {
    fetch(`/admin/order/${orderId}/item/${itemId}/status`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ 
            status: status,
            rejectReason: rejectReason 
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            const action = status === 'Returned' ? 'approved' : 'rejected';
            Swal.fire({
                title: 'Success!',
                text: `Return request has been ${action} successfully`,
                icon: 'success',
                showConfirmButton: false,
                timer: 1500
            }).then(() => {
                window.location.reload();
            });
        } else {
            throw new Error(data.message || 'Failed to update status');
        }
    })
    .catch(error => {
        Swal.fire({
            title: 'Error!',
            text: error.message || 'Something went wrong',
            icon: 'error'
        });
    });
}
</script>

<!-- Add Font Awesome for icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

<style>
    .return-request-card {
        transition: all 0.3s ease;
        box-shadow: 0 2px 4px rgba(0,0,0,0.05);
    }
    
    .return-request-card:hover {
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

    .btn-group .btn {
        transition: all 0.2s ease;
    }

    .btn-group .btn:hover {
        transform: translateY(-1px);
    }

    .status-badge {
        font-size: 0.85rem;
        padding: 0.35rem 0.65rem;
    }

    .form-select {
        border-radius: 0.25rem;
        border: 1px solid #dee2e6;
        padding: 0.375rem 2.25rem 0.375rem 0.75rem;
        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
    }

    .form-select:focus {
        border-color: #86b7fe;
        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);
    }
</style>

<%- include('../layouts/admin/footer.ejs') %>
