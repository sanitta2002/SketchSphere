<%- include('../layouts/user/header.ejs') %>

<!-- Shop Section -->
<div class="shop-container container-fluid py-5 ">
    <div class="row g-4 pt-5">
        <!-- Filters Column -->
        <div class="col-lg-2">
            <div class="filters-wrapper position-sticky" style="top: 4rem;">
                <div class="card shadow-sm border-0 rounded-4">
                    <div class="card-body p-5">
                        <h6 class="fw-bold mb-3">Filters</h6>
                        <!-- Categories -->
                        <div class="mb-3">
                            <p class="text-muted mb-2 small">Categories</p>
                            <% if (typeof categories !== 'undefined') { %>
                                <% if (categories && categories.length > 0) { %>
                                    <% categories.forEach(category => { %>
                                        <div class="form-check custom-checkbox mb-2">
                                            <input class="form-check-input" 
                                                type="checkbox" 
                                                value="<%= category._id %>" 
                                                id="category<%= category._id %>"
                                                <% if (typeof selectedCategories !== 'undefined' && selectedCategories.includes(category._id.toString())) { %>
                                                    checked
                                                <% } %>
                                            >
                                            <label class="form-check-label small" for="category<%= category._id %>">
                                                <%= category.name %>
                                            </label>
                                        </div>
                                    <% }); %>
                                <% } else { %>
                                    <p class="text-muted small">No categories found in database</p>
                                <% } %>
                            <% } else { %>
                                <p class="text-muted small">Categories data is undefined</p>
                            <% } %>
                            <!-- Debug info -->
                            <% if (typeof categories !== 'undefined') { %>
                                <small class="text-muted d-none">Categories count: <%= categories.length %></small>
                            <% } %>
                        </div>
                        <!-- Price Range -->
                        <div class="mb-3">
                            <p class="text-muted mb-2 small">Price Range</p>
                            <input type="range" class="form-range custom-range" min="0" max="1000" id="priceRange" value="<%= typeof selectedPrice !== 'undefined' ? selectedPrice : 1000 %>">
                            <div class="d-flex justify-content-between mt-2">
                                <span class="price-label text-muted small">₹0</span>
                                <span class="price-label text-muted small">₹<%= typeof selectedPrice !== 'undefined' ? selectedPrice : 1000 %></span>
                            </div>
                        </div>
                        <!-- Apply Button -->
                        <button class="btn btn-dark btn-sm w-100">Apply</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Content Column -->
        <div class="col-lg-10">
            <!-- Search Bar -->
            <div class="search-bar mb-4">
                <div class="row g-2">
                    <div class="col-md-8">
                        <div class="input-group">
                            <span class="input-group-text bg-white border-end-0">
                                <i class="fas fa-search text-muted"></i>
                            </span>
                            <input 
                                type="text" 
                                class="form-control border-start-0" 
                                id="searchInput"
                                placeholder="Search products or writers..."
                                value="<%= typeof searchQuery !== 'undefined' ? searchQuery : '' %>"
                            >
                        </div>
                    </div>
                    <div class="col-md-4">
                        <select class="form-select" id="sortSelect">
                            <option value="" selected>Sort by</option>
                            
                            <option value="newest" <%= typeof sortBy !== 'undefined' && sortBy === 'newest' ? 'selected' : '' %>>New Arrivals</option>
                            <option value="az" <%= typeof sortBy !== 'undefined' && sortBy === 'az' ? 'selected' : '' %>>Alphabetically A-Z</option>
                            <option value="za" <%= typeof sortBy !== 'undefined' && sortBy === 'za' ? 'selected' : '' %>>Alphabetically Z-A</option>
                            <option value="priceHigh" <%= typeof sortBy !== 'undefined' && sortBy === 'priceHigh' ? 'selected' : '' %>>Price High to Low</option>
                            <option value="priceLow" <%= typeof sortBy !== 'undefined' && sortBy === 'priceLow' ? 'selected' : '' %>>Price Low to High</option>
                        </select>
                    </div>
                </div>
            </div>

            <!-- Products Grid -->
            <div class="row row-cols-2 row-cols-md-3 row-cols-lg-5 g-3 p-5" id="products-container">
                <% products.forEach(product => { %>
                    <div class="col">
                        <div class="card product-card h-100 border-0 shadow-sm rounded-3" data-out-of-stock="<%= product.available_quantity === 0 %>">
                            <div class="product-image-container">
                                <a href="/product/<%= product._id %>">
                                    <img 
                                        src="<%= product.product_img && product.product_img.length > 0 ? `/uploads/re-image/${product.product_img[0]}` : '/uploads/re-image/default.jpeg' %>" 
                                        class="card-img-top product-image" 
                                        alt="<%= product.name %>"
                                        onerror="this.onerror=null; this.src='/uploads/re-image/default.jpeg';"
                                    >
                                </a>
                                <% if (product.hasValidOffer) { %>
                                    <div class="offer-badge">
                                        <span><%= product.offerPercentage %>% OFF</span>
                                      </div>
                                <% } %>
                                <% if (product.available_quantity === 0) { %>
                                    <div class="out-of-stock-overlay">Out of Stock</div>
                                <% } %>
                                <button class="wishlist-btn" onclick="toggleWishlist(this, '<%= product._id %>')" data-product-id="<%= product._id %>">
                                    <i class="far fa-heart"></i>
                                </button>
                            </div>
                            <div class="card-body d-flex flex-column">
                                <h6 class="card-title mb-1 text-truncate">
                                    <a href="/product/<%= product._id %>" class="text-dark text-decoration-none"><%= product.name %></a>
                                </h6>
                                <p class="text-muted small mb-2"><%= product.writer || 'Unknown Author' %></p>
                                <div class="price-container mt-auto">
                                    <% if (product.hasValidOffer) { %>
                                        <div class="product-price">
                                            <span class="current-price">₹<%= product.currentPrice %></span>
                                            <span class="original-price">₹<%= product.originalPrice %></span>
                                        </div>
                                    <% } else { %>
                                        <p class="mb-0 fw-bold">₹<%= product.Sale_price %></p>
                                    <% } %>
                                </div>
                                <div class="d-flex justify-content-between align-items-center mt-2">
                                    <% if (product.available_quantity === 0) { %>
                                        <span class="badge bg-danger-subtle text-danger">Out of Stock</span>
                                    <% } else { %>
                                        <span class="badge bg-success-subtle text-success">In Stock</span>
                                    <% } %>
                                </div>
                                <a href="/productDetails?id=<%= product._id %>" class="btn btn-outline-dark btn-sm w-100 mt-2">View Details</a>
                            </div>
                        </div>
                    </div>
                <% }); %>
            </div>

            <!-- Pagination -->
            <% if (totalPages > 1) { %>
                <div class="d-flex justify-content-center mt-4">
                    <nav aria-label="Page navigation">
                        <ul class="pagination pagination-sm">
                            <% if (hasPreviousPage) { %>
                                <li class="page-item">
                                    <a class="page-link" href="?page=<%= previousPage %>&maxPrice=<%= maxPrice %>&categories=<%= selectedCategories.join(',') %>&sortBy=<%= sortBy %>&search=<%= searchQuery %>">
                                        Previous
                                    </a>
                                </li>
                            <% } %>

                            <% for(let i = 1; i <= totalPages; i++) { %>
                                <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                    <a class="page-link <%= currentPage === i ? 'bg-dark border-dark' : '' %>" 
                                        href="?page=<%= i %>&maxPrice=<%= maxPrice %>&categories=<%= selectedCategories.join(',') %>&sortBy=<%= sortBy %>&search=<%= searchQuery %>">
                                        <%= i %>
                                    </a>
                                </li>
                            <% } %>

                            <% if (hasNextPage) { %>
                                <li class="page-item">
                                    <a class="page-link" href="?page=<%= nextPage %>&maxPrice=<%= maxPrice %>&categories=<%= selectedCategories.join(',') %>&sortBy=<%= sortBy %>&search=<%= searchQuery %>">
                                        Next
                                    </a>
                                </li>
                            <% } %>
                        </ul>
                    </nav>
                </div>
            <% } %>
        </div>
    </div>
</div>

<!-- Custom CSS -->
<style>
    /* Product Card Styling */
    .product-card {
        transition: all 0.3s ease;
    }

    .product-card[data-out-of-stock="true"] {
        opacity: 0.85;
    }

    .product-card[data-out-of-stock="true"] .product-image {
        opacity: 0.7;
    }

    .product-image-container {
        position: relative;
        padding-top: 100%;
        overflow: hidden;
        background: #f8f9fa;
    }

    .product-image {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .product-card:hover .product-image {
        transform: scale(1.05);
    }

    .product-title {
        font-size: 0.9rem;
        font-weight: 500;
        line-height: 1.3;
        color: #333;
        overflow: hidden;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
    }

    .current-price {
        font-size: 1rem;
        font-weight: 600;
        color: #000000;
    }

    /* Stock Badge */
    .badge {
        font-weight: 500;
        padding: 6px 12px;
    }

    .bg-success-subtle {
        background-color: rgba(0, 0, 0, 0.1) !important;
    }

    .text-success {
        color: #20c997 !important;
    }

    .bg-danger-subtle {
        background-color: #ffe5e5;
    }

    .text-danger {
        color: #dc3545 !important;
    }

    /* Button Styling */
    .btn-outline-dark {
        border-width: 1px;
    }

    .btn-sm {
        font-size: 0.8rem;
        padding: 0.25rem 0.5rem;
    }

    /* Out of Stock Overlay */
    .out-of-stock-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.7);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 0.8rem;
        font-weight: 500;
    }

    /* Custom Range Slider */
    .custom-range::-webkit-slider-thumb {
        background: #000000;
    }

    .custom-range::-webkit-slider-runnable-track {
        background: #e9ecef;
    }

    /* Form Controls */
    .form-control:focus, .form-select:focus {
        border-color: #000000;
        box-shadow: 0 0 0 0.25rem rgba(0, 0, 0, 0.25);
    }

    .input-group-text {
        background: #ffffff;
        border-right: none;
    }

    .form-control {
        border-left: none;
    }

    /* Custom Checkbox */
    .custom-checkbox .form-check-input:checked {
        background-color: #000000;
        border-color: #000000;
    }

    /* Pagination Styling */
    .pagination {
        margin-top: 2rem;
        gap: 0.25rem;
    }

    .pagination .page-link {
        border-radius: 0.375rem;
        padding: 0.5rem 0.75rem;
        color: #333;
        border: 1px solid #dee2e6;
        min-width: 2.5rem;
        text-align: center;
        transition: all 0.2s ease;
    }

    .pagination .page-link:hover:not(.disabled) {
        background-color: #f8f9fa;
        color: #000;
        border-color: #dee2e6;
    }

    .pagination .page-item.active .page-link {
        background-color: #212529;
        border-color: #212529;
        color: #fff;
    }

    .pagination .page-item.disabled .page-link {
        color: #6c757d;
        pointer-events: none;
        background-color: #fff;
        border-color: #dee2e6;
    }

    .pagination .page-link:focus {
        box-shadow: 0 0 0 0.25rem rgba(33, 37, 41, 0.25);
    }

    .pagination .fas {
        font-size: 0.75rem;
    }

    /* Wishlist Button Styling */
    .wishlist-btn {
        position: absolute;
        top: 10px;
        right: 10px;
        background: white;
        border: none;
        width: 35px;
        height: 35px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        z-index: 2;
    }

    .wishlist-btn:hover {
        transform: scale(1.1);
        box-shadow: 0 3px 8px rgba(0,0,0,0.15);
    }

    .wishlist-btn i {
        font-size: 1.2rem;
        color: #333;
        transition: all 0.3s ease;
    }

    .wishlist-btn.active i {
        color: #ff4757;
    }

    .wishlist-btn:focus {
        outline: none;
    }

    .wishlist-btn:active {
        transform: scale(0.95);
    }

    /* Animation for heart icon */
    .wishlist-btn i {
        transition: transform 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    }

    .wishlist-btn.active i {
        transform: scale(1.2);
    }

    .wishlist-btn:hover i {
        transform: scale(1.1);
    }

    .wishlist-btn.active:hover i {
        transform: scale(1.3);
    }

    /* Offer Badge */
    .offer-badge {
        position: absolute;
        top: 10px;
        right: 130px;
        background: #28a745;
        color: white;
        padding: 4px 8px;
        border-radius: 4px; 
        display: flex;
        flex-direction: column;
        align-items: center;
        z-index: 1;
    }

    .offer-badge span {
        font-weight: bold;
        font-size: 0.9rem;
    }

    .offer-badge small {
        font-size: 0.7rem;
        opacity: 0.9;
    }

    .product-price {
        display: flex;
        gap: 8px;
        align-items: center;
    }

    .current-price {
        font-weight: bold;
        color: #28a745;
    }

    .original-price {
        text-decoration: line-through;
        color: #6c757d;
        font-size: 0.9rem;
    }

    /* Loading and Error States */
    .no-results, .error-state {
        padding: 2rem;
        text-align: center;
    }

    .no-results i, .error-state i {
        display: block;
        margin-bottom: 1rem;
    }

    .spinner-border {
        width: 3rem;
        height: 3rem;
    }

    /* Reset button */
    .btn-outline-dark:hover {
        background-color: #212529;
        color: #fff;
    }

    .btn-outline-dark i {
        font-size: 0.8rem;
    }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const priceRange = document.getElementById('priceRange');
    const priceLabels = document.querySelectorAll('.price-label');
    const applyButton = document.querySelector('.btn-dark.btn-sm');
    const sortSelect = document.getElementById('sortSelect');
    const searchInput = document.getElementById('searchInput');
    const categoryCheckboxes = document.querySelectorAll('input[type="checkbox"]');
    let debounceTimer;

    // Update price label when range slider changes
    priceRange.addEventListener('input', function() {
        priceLabels[1].textContent = `₹${this.value}`;
    });

    // Function to get selected categories
    function getSelectedCategories() {
        const selectedCategories = [];
        categoryCheckboxes.forEach(checkbox => {
            if (checkbox.checked) {
                selectedCategories.push(checkbox.value);
            }
        });
        return selectedCategories;
    }

    // Function to update URL with current filters
    function updateURL() {
        const selectedCategories = getSelectedCategories();
        const maxPrice = priceRange.value;
        const sortBy = sortSelect.value;
        const searchQuery = searchInput.value.trim();
        
        const params = new URLSearchParams(window.location.search);
        
        // Update parameters
        if (selectedCategories.length > 0) {
            params.set('categories', selectedCategories.join(','));
        } else {
            params.delete('categories');
        }
        
        params.set('maxPrice', maxPrice);
        
        if (sortBy) {
            params.set('sortBy', sortBy);
        } else {
            params.delete('sortBy');
        }
        
        if (searchQuery) {
            params.set('search', searchQuery);
        } else {
            params.delete('search');
        }
        
        // Get current page number
        const currentPage = params.get('page') || '1';
        params.set('page', currentPage);
        
        // Update URL and reload page
        window.location.href = `${window.location.pathname}?${params.toString()}`;
    }

    // Event listener for apply button
    applyButton.addEventListener('click', updateURL);

    // Event listener for sort select
    sortSelect.addEventListener('change', updateURL);

    // Event listener for search input with debounce
    searchInput.addEventListener('input', function() {
        clearTimeout(debounceTimer);
        debounceTimer = setTimeout(updateURL, 500); // Debounce for 500ms
    });

    // Event listener for Enter key in search input
    searchInput.addEventListener('keypress', function(e) {
        if (e.key === 'Enter') {
            clearTimeout(debounceTimer);
            updateURL();
        }
    });

    // Initialize price label
    priceLabels[1].textContent = `₹${priceRange.value}`;

    // Initialize wishlist icons
    async function initializeWishlistIcons() {
        try {
            const productButtons = document.querySelectorAll('.wishlist-btn');
            
            // Get all product IDs
            const productIds = Array.from(productButtons).map(button => 
                button.getAttribute('data-product-id')
            );

            // Check status for each product
            for (const productId of productIds) {
                const response = await fetch(`/wishlist-status/${productId}`);
                const data = await response.json();
                
                if (data.success) {
                    const button = document.querySelector(`[data-product-id="${productId}"]`);
                    const icon = button.querySelector('i');
                    
                    if (data.inWishlist) {
                        icon.classList.remove('far');
                        icon.classList.add('fas');
                        icon.style.color = '#dc3545';
                    }
                }
            }
        } catch (error) {
            console.error('Error initializing wishlist icons:', error);
        }
    }

    // Make toggleWishlist function globally available
    window.toggleWishlist = async function(button, productId) {
        try {
            const response = await fetch('/toggle-wishlist', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ productId }),
            });

            const data = await response.json();

            if (data.success) {
                const icon = button.querySelector('i');
                if (data.action === 'added') {
                    icon.classList.remove('far');
                    icon.classList.add('fas');
                    icon.style.color = '#dc3545';
                } else {
                    icon.classList.remove('fas');
                    icon.classList.add('far');
                    icon.style.color = '';
                }

                // Show success message
                Swal.fire({
                    icon: 'success',
                    title: data.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            } else {
                // If user is not logged in
                if (data.message.includes('login')) {
                    Swal.fire({
                        title: 'Please Log In',
                        text: 'You need to be logged in to add items to your wishlist',
                        icon: 'info',
                        showCancelButton: true,
                        confirmButtonText: 'Login',
                        cancelButtonText: 'Cancel'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = '/login';
                        }
                    });
                } else {
                    // Show error message
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: data.message || 'Something went wrong!'
                    });
                }
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Something went wrong!'
            });
        }
    };

    // Initialize wishlist icons when page loads
    initializeWishlistIcons();
});
</script>

<%- include('../layouts/user/footer.ejs') %>