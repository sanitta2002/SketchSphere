<%- include('../layouts/user/header.ejs') %>

<!-- Shop Section -->
<div class="shop-container container-fluid py-5 ">
    <div class="row g-4 pt-5">
        <!-- Filters Column -->
        <div class="col-lg-2">
            <div class="filters-wrapper position-sticky" style="top: 4rem;">
                <div class="card shadow-sm border-0 rounded-4">
                    <div class="card-body p-5">
                        <h6 class="fw-bold mb-3">Filters</h6>
                        <!-- Categories -->
                        <div class="mb-3">
                            <p class="text-muted mb-2 small">Categories</p>
                            <% if (typeof categories !== 'undefined') { %>
                                <% if (categories && categories.length > 0) { %>
                                    <% categories.forEach(category => { %>
                                        <div class="form-check custom-checkbox mb-2">
                                            <input class="form-check-input" 
                                                type="checkbox" 
                                                value="<%= category._id %>" 
                                                id="category<%= category._id %>"
                                                <% if (typeof selectedCategories !== 'undefined' && selectedCategories.includes(category._id.toString())) { %>
                                                    checked
                                                <% } %>
                                            >
                                            <label class="form-check-label small" for="category<%= category._id %>">
                                                <%= category.name %>
                                            </label>
                                        </div>
                                    <% }); %>
                                <% } else { %>
                                    <p class="text-muted small">No categories found in database</p>
                                <% } %>
                            <% } else { %>
                                <p class="text-muted small">Categories data is undefined</p>
                            <% } %>
                            <!-- Debug info -->
                            <% if (typeof categories !== 'undefined') { %>
                                <small class="text-muted d-none">Categories count: <%= categories.length %></small>
                            <% } %>
                        </div>
                        <!-- Price Range -->
                        <div class="mb-3">
                            <p class="text-muted mb-2 small">Price Range</p>
                            <input type="range" class="form-range custom-range" min="0" max="1000" id="priceRange" value="<%= typeof selectedPrice !== 'undefined' ? selectedPrice : 1000 %>">
                            <div class="d-flex justify-content-between mt-2">
                                <span class="price-label text-muted small">₹0</span>
                                <span class="price-label text-muted small">₹<%= typeof selectedPrice !== 'undefined' ? selectedPrice : 1000 %></span>
                            </div>
                        </div>
                        <!-- Apply Button -->
                        <button class="btn btn-dark btn-sm w-100">Apply</button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Content Column -->
        <div class="col-lg-10">
            <!-- Search Bar -->
            <div class="search-bar mb-4">
                <div class="row g-2">
                    <div class="col-md-8">
                        <div class="input-group">
                            <span class="input-group-text bg-white border-end-0">
                                <i class="fas fa-search text-muted"></i>
                            </span>
                            <input 
                                type="text" 
                                class="form-control border-start-0" 
                                id="searchInput"
                                placeholder="Search products or writers..."
                                value="<%= typeof searchQuery !== 'undefined' ? searchQuery : '' %>"
                            >
                        </div>
                    </div>
                    <div class="col-md-4">
                        <select class="form-select" id="sortSelect">
                            <option value="" selected>Sort by</option>
                            
                            <option value="newest" <%= typeof sortBy !== 'undefined' && sortBy === 'newest' ? 'selected' : '' %>>New Arrivals</option>
                            <option value="az" <%= typeof sortBy !== 'undefined' && sortBy === 'az' ? 'selected' : '' %>>Alphabetically A-Z</option>
                            <option value="za" <%= typeof sortBy !== 'undefined' && sortBy === 'za' ? 'selected' : '' %>>Alphabetically Z-A</option>
                            <option value="priceHigh" <%= typeof sortBy !== 'undefined' && sortBy === 'priceHigh' ? 'selected' : '' %>>Price High to Low</option>
                            <option value="priceLow" <%= typeof sortBy !== 'undefined' && sortBy === 'priceLow' ? 'selected' : '' %>>Price Low to High</option>
                        </select>
                    </div>
                </div>
            </div>

            <!-- Products Grid -->
            <div class="row row-cols-2 row-cols-md-3 row-cols-lg-5 g-3 p-5" id="products-container">
                <% products.forEach(product => { %>
                    <div class="col">
                        <div class="card product-card h-100 border-0 shadow-sm rounded-3" data-out-of-stock="<%= product.available_quantity === 0 %>">
                            <div class="product-image-container">
                                <img 
                                    src="<%= product.product_img && product.product_img.length > 0 ? `/uploads/re-image/${product.product_img[0]}` : '/uploads/re-image/default.jpeg' %>" 
                                    class="card-img-top product-image" 
                                    alt="<%= product.name %>"
                                    onerror="this.onerror=null; this.src='/uploads/re-image/default.jpeg';"
                                >
                                <% if (product.available_quantity === 0) { %>
                                    <div class="out-of-stock-overlay">Out of Stock</div>
                                <% } %>
                                <button class="wishlist-btn" onclick="toggleWishlist(this, '<%= product._id %>')" data-product-id="<%= product._id %>">
                                    <i class="far fa-heart"></i>
                                </button>
                            </div>
                            <div class="card-body p-3">
                                <h6 class="product-title mb-1"><%= product.name %></h6>
                                <div class="product-details">
                                    <% if (product.writer) { %>
                                        <div class="text-muted mb-1">
                                            <i class="fas fa-pen me-1"></i><%= product.writer %>
                                        </div>
                                    <% } %>
                                </div>
                                <div class="product-price">
                                    <% if (product.offerPrice > 0 && new Date(product.offerEndDate) > new Date()) { %>
                                        <span class="original-price text-decoration-line-through text-muted">₹<%= product.Sale_price %></span>
                                        <span class="offer-price text-danger">₹<%= product.offerPrice %></span>
                                        <span class="offer-badge bg-success text-white px-2 py-1 rounded-pill small">
                                            <%= product.offerPercentage %>% OFF
                                        </span>
                                    <% } else { %>
                                        <span>₹<%= product.Sale_price %></span>
                                    <% } %>
                                </div>
                                <div class="d-flex justify-content-between align-items-center mt-2">
                                    <% if (product.available_quantity === 0) { %>
                                        <span class="badge bg-danger-subtle text-danger">Out of Stock</span>
                                    <% } else { %>
                                        <span class="badge bg-success-subtle text-success">In Stock</span>
                                    <% } %>
                                </div>
                                <a href="/productDetails?id=<%= product._id %>" class="btn btn-outline-dark btn-sm w-100 mt-2">View Details</a>
                            </div>
                        </div>
                    </div>
                <% }); %>
            </div>

            <!-- Pagination -->
            <div class="d-flex justify-content-center mt-4">
                <nav aria-label="Page navigation">
                    <ul class="pagination pagination-sm">
                        <% if (hasPreviousPage) { %>
                            <li class="page-item">
                                <a class="page-link" href="?page=<%= currentPage - 1 %>&maxPrice=<%= selectedPrice %>&categories=<%= selectedCategories.join(',') %>&sortBy=<%= sortBy %>&search=<%= searchQuery %>" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                </a>
                            </li>
                        <% } %>

                        <% for(let i = 1; i <= totalPages; i++) { %>
                            <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                <a class="page-link <%= currentPage === i ? 'bg-dark border-dark' : '' %>" 
                                   href="?page=<%= i %>&maxPrice=<%= selectedPrice %>&categories=<%= selectedCategories.join(',') %>&sortBy=<%= sortBy %>&search=<%= searchQuery %>">
                                    <%= i %>
                                </a>
                            </li>
                        <% } %>

                        <% if (hasNextPage) { %>
                            <li class="page-item">
                                <a class="page-link" href="?page=<%= currentPage + 1 %>&maxPrice=<%= selectedPrice %>&categories=<%= selectedCategories.join(',') %>&sortBy=<%= sortBy %>&search=<%= searchQuery %>" aria-label="Next">
                                    <span aria-hidden="true">&raquo;</span>
                                </a>
                            </li>
                        <% } %>
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>

<!-- Custom CSS -->
<style>
    /* Product Card Styling */
    .product-card {
        transition: all 0.3s ease;
    }

    .product-card[data-out-of-stock="true"] {
        opacity: 0.85;
    }

    .product-card[data-out-of-stock="true"] .product-image {
        opacity: 0.7;
    }

    .product-image-container {
        position: relative;
        padding-top: 100%;
        overflow: hidden;
        background: #f8f9fa;
    }

    .product-image {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .product-card:hover .product-image {
        transform: scale(1.05);
    }

    .product-title {
        font-size: 0.9rem;
        font-weight: 500;
        line-height: 1.3;
        color: #333;
        overflow: hidden;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
    }

    .current-price {
        font-size: 1rem;
        font-weight: 600;
        color: #000000;
    }

    /* Stock Badge */
    .badge {
        font-weight: 500;
        padding: 6px 12px;
    }

    .bg-success-subtle {
        background-color: rgba(0, 0, 0, 0.1) !important;
    }

    .text-success {
        color: #20c997 !important;
    }

    .bg-danger-subtle {
        background-color: #ffe5e5;
    }

    .text-danger {
        color: #dc3545 !important;
    }

    /* Button Styling */
    .btn-outline-dark {
        border-width: 1px;
    }

    .btn-sm {
        font-size: 0.8rem;
        padding: 0.25rem 0.5rem;
    }

    /* Out of Stock Overlay */
    .out-of-stock-overlay {
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.7);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 0.8rem;
        font-weight: 500;
    }

    /* Custom Range Slider */
    .custom-range::-webkit-slider-thumb {
        background: #000000;
    }

    .custom-range::-webkit-slider-runnable-track {
        background: #e9ecef;
    }

    /* Form Controls */
    .form-control:focus, .form-select:focus {
        border-color: #000000;
        box-shadow: 0 0 0 0.25rem rgba(0, 0, 0, 0.25);
    }

    .input-group-text {
        background: #ffffff;
        border-right: none;
    }

    .form-control {
        border-left: none;
    }

    /* Custom Checkbox */
    .custom-checkbox .form-check-input:checked {
        background-color: #000000;
        border-color: #000000;
    }

    /* Pagination Styling */
    .page-link {
        color: #000000;
    }

    .page-item.active .page-link {
        background-color: #000000;
        border-color: #000000;
        color: #ffffff;
    }

    .page-link:hover {
        color: #000000;
        background-color: #e9ecef;
        border-color: #dee2e6;
    }

    .page-link:focus {
        box-shadow: 0 0 0 0.25rem rgba(0, 0, 0, 0.25);
    }

    /* Wishlist Button */
    .wishlist-btn {
        position: absolute;
        top: 10px;
        right: 10px;
        background: white;
        border: none;
        width: 35px;
        height: 35px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.3s ease;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    .wishlist-btn:hover {
        transform: scale(1.1);
    }

    .wishlist-btn i {
        font-size: 1.2rem;
        color: #000;
        transition: all 0.3s ease;
    }

    .wishlist-btn.active i {
        color: #ff0000;
    }

    .wishlist-btn.active .far.fa-heart {
        font-weight: 900;
    }

    .text-warning {
        color: #ffa502 !important;
    }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const priceRange = document.getElementById('priceRange');
    const priceLabels = document.querySelectorAll('.price-label');
    const applyButton = document.querySelector('.btn-dark.btn-sm');
    const sortSelect = document.getElementById('sortSelect');
    const searchInput = document.getElementById('searchInput');
    const productsContainer = document.querySelector('.row.row-cols-2.row-cols-md-3.row-cols-lg-5');
    
    // Update price label when slider moves
    priceRange.addEventListener('input', function() {
        priceLabels[1].textContent = '₹' + this.value;
    });

    // Function to update URL and fetch products
    function updateProducts(keepPage = false) {
        const params = new URLSearchParams(window.location.search);
        
        // Get current values
        const searchQuery = searchInput.value.trim();
        const selectedCategories = Array.from(document.querySelectorAll('.form-check-input:checked'))
            .map(checkbox => checkbox.value);
        const maxPrice = priceRange.value;
        const sortValue = sortSelect.value;

        // Update parameters
        if (searchQuery) params.set('search', searchQuery);
        else params.delete('search');
        
        if (selectedCategories.length > 0) params.set('categories', selectedCategories.join(','));
        else params.delete('categories');
        
        params.set('maxPrice', maxPrice);
        
        if (sortValue) params.set('sortBy', sortValue);
        else params.delete('sortBy');

        // Reset to page 1 unless keepPage is true
        if (!keepPage) {
            params.delete('page');
        }

        // Update URL without reloading
        const newUrl = window.location.pathname + '?' + params.toString();
        window.history.pushState({ path: newUrl }, '', newUrl);

        // Fetch and render products
        fetch('/api/search-products?' + params.toString())
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    productsContainer.innerHTML = data.products.map(renderProduct).join('');
                    // Update pagination if provided
                    if (data.pagination) {
                        document.querySelector('.pagination-container').innerHTML = data.pagination;
                    }
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
    }

    // Handle sort selection change
    sortSelect.addEventListener('change', function() {
        updateProducts();
    });

    // Handle search with debounce
    let searchTimeout;
    searchInput.addEventListener('input', function() {
        clearTimeout(searchTimeout);
        searchTimeout = setTimeout(() => {
            updateProducts();
        }, 300);
    });

    // Handle filter application
    applyButton.addEventListener('click', function() {
        updateProducts();
    });

    // Function to render product HTML
    function renderProduct(product) {
        return `
            <div class="col">
                <div class="card product-card h-100 border-0 shadow-sm rounded-3" data-out-of-stock="${product.available_quantity === 0}">
                    <div class="product-image-container">
                        <img 
                            src="${product.product_img && product.product_img.length > 0 ? `/uploads/re-image/${product.product_img[0]}` : '/uploads/re-image/default.jpeg'}" 
                            class="card-img-top product-image" 
                            alt="${product.name}"
                            onerror="this.onerror=null; this.src='/uploads/re-image/default.jpeg';"
                        >
                        ${product.available_quantity === 0 ? '<div class="out-of-stock-overlay">Out of Stock</div>' : ''}
                        <button class="wishlist-btn" onclick="toggleWishlist(this, '${product._id}')" data-product-id="${product._id}">
                            <i class="far fa-heart"></i>
                        </button>
                    </div>
                    <div class="card-body p-3">
                        <h6 class="product-title mb-1">${product.name}</h6>
                        <div class="product-details small">
                            ${product.writer ? `
                                <div class="text-muted mb-1">
                                    <i class="fas fa-pen me-1"></i>${product.writer}
                                </div>
                            ` : ''}
                        </div>
                        <div class="product-price">
                            ${product.offerPrice > 0 && new Date(product.offerEndDate) > new Date() ? `
                                <span class="original-price text-decoration-line-through text-muted">₹${product.Sale_price}</span>
                                <span class="offer-price text-danger">₹${product.offerPrice}</span>
                                <span class="offer-badge bg-success text-white px-2 py-1 rounded-pill small">
                                    ${product.offerPercentage}% OFF
                                </span>
                            ` : `
                                <span>₹${product.Sale_price}</span>
                            `}
                        </div>
                        <div class="d-flex justify-content-between align-items-center mt-2">
                            ${product.available_quantity === 0 ? 
                                '<span class="badge bg-danger-subtle text-danger">Out of Stock</span>' : 
                                '<span class="badge bg-success-subtle text-success">In Stock</span>'
                            }
                        </div>
                        <a href="/productDetails?id=${product._id}" class="btn btn-outline-dark btn-sm w-100 mt-2">View Details</a>
                    </div>
                </div>
            </div>
        `;
    }
});

async function toggleWishlist(button, productId) {
    try {
        const response = await fetch('/toggle-wishlist', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                productId: productId
            })
        });

        const data = await response.json();
        
        if (response.ok) {
            button.classList.toggle('active');
            const icon = button.querySelector('i');
            if (button.classList.contains('active')) {
                icon.classList.remove('far');
                icon.classList.add('fas');
            } else {
                icon.classList.remove('fas');
                icon.classList.add('far');
            }
            
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: data.message,
                showConfirmButton: false,
                timer: 1500
            });
        } else {
            throw new Error(data.message || 'Failed to toggle wishlist');
        }
    } catch (error) {
        if (error.message === 'Please login to add items to wishlist') {
            window.location.href = '/login';
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: error.message || 'Something went wrong!',
            });
        }
    }
}

// Check initial wishlist status for all products
async function checkWishlistStatus() {
    const wishlistButtons = document.querySelectorAll('.wishlist-btn');
    wishlistButtons.forEach(async (button) => {
        const productId = button.getAttribute('data-product-id');
        try {
            const response = await fetch(`/wishlist-status/${productId}`);
            const data = await response.json();
            if (data.inWishlist) {
                button.classList.add('active');
                const icon = button.querySelector('i');
                icon.classList.remove('far');
                icon.classList.add('fas');
            }
        } catch (error) {
            console.error('Error checking wishlist status:', error);
        }
    });
}

// Call on page load
document.addEventListener('DOMContentLoaded', function() {
    checkWishlistStatus();
});
</script>

<%- include('../layouts/user/footer.ejs') %>