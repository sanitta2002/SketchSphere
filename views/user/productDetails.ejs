<%- include('../../Views/layouts/user/header.ejs') %>

<style>
    .ProductContainer {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
        margin-top: 5%;
        display: flex;
        flex-direction: column;
        gap: 30px;
    }

    .product-detail {
        display: flex;
        flex-wrap: wrap;
        gap: 40px;
        align-items: flex-start;
    }

    .product-images {
        flex: 1;
        min-width: 300px;
        max-width: 50%;
        display: flex;
        flex-direction: column;
        gap: 15px;
    }

    .main-image-container {
        position: relative;
        overflow: hidden;
        width: 100%;
        padding-top: 100%; /* 1:1 Aspect Ratio */
        border-radius: 8px;
        border: 1px solid #ddd;
        background-color: #f8f9fa;
        cursor: zoom-in;
    }

    .main-image {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 8px;
        transition: transform 0.1s ease-out;
    }

    .main-image.zoomed {
        transform-origin: 0 0;
    }

    .thumbnail-strip {
        display: flex;
        gap: 10px;
        overflow-x: auto;
        padding-bottom: 10px;
    }

    .thumbnail {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border-radius: 4px;
        cursor: pointer;
        border: 2px solid transparent;
        transition: border-color 0.3s ease;
    }

    .thumbnail.active {
        border-color: #01050a;
    }

    .product-info {
        flex: 1;
        min-width: 300px;
        max-width: 50%;
    }

    .product-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 15px;
    }

    .product-title {
        font-size: 28px;
        color: #333;
        margin: 0;
        flex: 1;
        padding-right: 20px;
    }

    .wishlist-btn {
        background: none;
        border: none;
        padding: 10px;
        cursor: pointer;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        width: 45px;
        height: 45px;
        border-radius: 50%;
        background: #f8f9fa;
    }

    .wishlist-btn:hover {
        background: #f1f1f1;
        transform: scale(1.05);
    }

    .wishlist-btn i {
        font-size: 20px;
        color: #333;
        transition: all 0.3s ease;
    }

    .wishlist-btn.active i {
        color: #ff4444;
    }

    .wishlist-btn:hover i {
        transform: scale(1.1);
    }

    .product-brand {
        color: #666;
        font-size: 16px;
        margin: 20px 0;
        padding: 15px;
        background: #f8f9fa;
        border-radius: 8px;
    }

    .info-row {
        margin: 8px 0;
        display: flex;
        align-items: center;
    }

    .info-row i {
        margin-right: 8px;
        color: #0056b3;
        width: 20px;
    }

    .info-label {
        font-weight: 600;
        min-width: 120px;
        color: #444;
    }

    .info-value {
        color: #666;
    }

    .product-description {
        color: #444;
        line-height: 1.6;
        margin: 20px 0;
    }

    .product-price-section {
        position: relative;
        margin: 15px 0;
    }

    .offer-badge {
        position: absolute;
        top: -20px;
        right: 130px;
        background: #28a745;
        color: white;
        padding: 4px 8px;
        border-radius: 4px;
        display: flex;
        flex-direction: column;
        align-items: center;
        z-index: 1;
    }

    .offer-badge span {
        font-weight: bold;
        font-size: 0.9rem;
    }

    .product-price {
        display: flex;
        gap: 8px;
        align-items: center;
        margin-top: 10px;
    }

    .current-price {
        font-weight: bold;
        color: #28a745;
        font-size: 1.5rem;
    }

    .original-price {
        text-decoration: line-through;
        color: #6c757d;
        font-size: 1.2rem;
    }

    .quantity-selector {
        display: flex;
        align-items: center;
        gap: 10px;
        margin: 20px 0;
    }

    .quantity-btn {
        background-color: #f8f9fa;
        border: 1px solid #ced4da;
        padding: 8px 12px;
        font-size: 16px;
        cursor: pointer;
        border-radius: 4px;
        transition: background-color 0.3s ease;
    }

    .quantity-btn:hover:not(:disabled) {
        background-color: #e9ecef;
    }

    .quantity-btn:disabled {
        cursor: not-allowed;
        opacity: 0.5;
    }

    .quantity-display {
        padding: 8px 15px;
        border: 1px solid #ced4da;
        font-size: 16px;
        font-weight: bold;
        text-align: center;
        min-width: 60px;
    }

    .stock-info {
        color: #28a745;
        font-size: 14px;
        margin: 10px 0;
    }

    .low-stock {
        color: #dc3545;
    }

    .add-to-cart-btn {
        background-color: #000000;
        color: white;
        border: none;
        padding: 12px 25px;
        font-size: 16px;
        cursor: pointer;
        border-radius: 4px;
        transition: background-color 0.3s ease;
        width: 100%;
        margin-top: 20px;
    }

    .add-to-cart-btn:hover:not(:disabled) {
        background-color: #01070d;
    }

    .add-to-cart-btn:disabled {
        background-color: #6c757d;
        cursor: not-allowed;
    }

    .related-products {
        margin-top: 50px;
    }

    .related-products-title {
        font-size: 24px;
        color: #333;
        margin-bottom: 20px;
    }

    .related-products-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 20px;
    }

    .related-product-card {
        border: 1px solid #ddd;
        border-radius: 8px;
        overflow: hidden;
        transition: transform 0.3s ease;
    }

    .related-product-card:hover {
        transform: translateY(-5px);
    }

    .related-product-image {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .related-product-info {
        padding: 15px;
    }

    .related-product-name {
        font-size: 16px;
        color: #333;
        margin-bottom: 5px;
    }

    .related-product-price {
        font-size: 18px;
        color: #000102;
        font-weight: bold;
    }

    .product-meta {
        margin: 20px 0;
        padding: 15px;
        border-top: 1px solid #eee;
        border-bottom: 1px solid #eee;
    }

    .meta-item {
        display: inline-block;
        margin-right: 20px;
        color: #666;
    }

    .meta-item i {
        margin-right: 5px;
        color: #0056b3;
    }

    @media (max-width: 768px) {
        .product-detail {
            flex-direction: column;
        }

        .product-images,
        .product-info {
            max-width: 100%;
        }

        .related-products-grid {
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        }
    }
</style>

<div class="ProductContainer">
    <div class="product-detail">
        <!-- Product Images Section -->
        <div class="product-images">
            <div class="main-image-container" onmousemove="zoomImage(event)" onmouseleave="resetZoom(event)">
                <img id="mainImage" 
                     src="<%= product.product_img && product.product_img.length > 0 ? `/uploads/re-image/${product.product_img[0]}` : '/uploads/re-image/default.jpeg' %>" 
                     alt="<%= product.name %>" 
                     class="main-image"
                     onerror="this.onerror=null; this.src='/uploads/re-image/default.jpeg';">
            </div>
            <div class="thumbnail-strip">
                <% if (product.product_img && product.product_img.length > 0) { %>
                    <% product.product_img.forEach(function(img) { %>
                        <img src="/uploads/re-image/<%= img %>" 
                             alt="Product Thumbnail" 
                             class="thumbnail"
                             onclick="changeImage(this)"
                             onerror="this.onerror=null; this.src='/uploads/re-image/default.jpeg';">
                    <% }); %>
                <% } %>
            </div>
        </div>

        <!-- Product Info Section -->
        <div class="product-info">
            <h1 class="product-title mb-3"><%= product.name %></h1>
            <div class="product-price-section">
                <% if (product.hasValidOffer) { %>
                    <div class="offer-badge">
                        <span><%= product.offerPercentage %>% OFF</span>
                    </div>
                    <div class="product-price">
                        <span class="current-price">₹<%= product.currentPrice %></span>
                        <span class="original-price">₹<%= product.originalPrice %></span>
                    </div>
                <% } else { %>
                    <div class="product-price">
                        <span class="current-price">₹<%= product.Sale_price %></span>
                    </div>
                <% } %>
            </div>
            
            <div class="product-brand">
                <% if (product.writer) { %>
                    <div class="info-row">
                        <i class="fas fa-pen-fancy"></i>
                        <span class="info-label">Author:</span>
                        <span class="info-value"><%= product.writer %></span>
                    </div>
                <% } %>
                <% if (product.cover_Artist) { %>
                    <div class="info-row">
                        <i class="fas fa-paint-brush"></i>
                        <span class="info-label">Cover Artist:</span>
                        <span class="info-value"><%= product.cover_Artist %></span>
                    </div>
                <% } %>
                <% if (product.Published_Date) { %>
                    <div class="info-row">
                        <i class="fas fa-calendar-alt"></i>
                        <span class="info-label">Published:</span>
                        <span class="info-value"><%= new Date(product.Published_Date).toLocaleDateString('en-US', { 
                            year: 'numeric', 
                            month: 'long', 
                            day: 'numeric' 
                        }) %></span>
                    </div>
                <% } %>
                <% if (product.category_id && product.category_id.name) { %>
                    <div class="info-row">
                        <i class="fas fa-bookmark"></i>
                        <span class="info-label">Category:</span>
                        <span class="info-value"><%= product.category_id.name %></span>
                    </div>
                <% } %>
                <% if (product.language) { %>
                    <div class="info-row">
                        <i class="fas fa-language"></i>
                        <span class="info-label">Language:</span>
                        <span class="info-value"><%= product.language %></span>
                    </div>
                <% } %>
            </div>

            <div class="product-description">
                <h3><i class="fas fa-book-open"></i> About this Book</h3>
                <%= product.description %>
            </div>

            <div class="quantity-selector">
                <button id="decrease-btn" class="quantity-btn" onclick="changeQuantity(-1)">-</button>
                <span id="quantity" class="quantity-display">1</span>
                <button id="increase-btn" class="quantity-btn" onclick="changeQuantity(1)">+</button>
            </div>

            <div class="stock-info <%= product.available_quantity < 5 ? 'low-stock' : '' %>">
                <% if (product.available_quantity > 0) { %>
                    <% if (product.available_quantity < 5) { %>
                        Only <%= product.available_quantity %> left in stock - order soon
                    <% } else { %>
                        In Stock (<%= product.available_quantity %> available)
                    <% } %>
                <% } else { %>
                    Out of Stock
                <% } %>
            </div>

            <button class="add-to-cart-btn" 
                    onclick="addToCartHandler(event, '<%= product._id %>')"
                    <%= product.available_quantity === 0 ? 'disabled' : '' %>>
                <%= product.available_quantity === 0 ? 'Out of Stock' : 'Add to Cart' %>
            </button>

            <!-- <div class="product-meta">
                <% if (product.category_id) { %>
                    <p class="meta-item"><i class="fas fa-bookmark"></i> Category: <%= product.category_id.name %></p>
                <% } %>
            </div> -->
        </div>
    </div>

    <!-- Related Products Section -->
    <% if (typeof recommendedProducts !== 'undefined' && recommendedProducts && recommendedProducts.length > 0) { %>
        <div class="related-products">
            <h2 class="related-products-title">Related Products</h2>
            <div class="related-products-grid">
                <% recommendedProducts.forEach(function(relatedProduct) { %>
                    <div class="related-product-card">
                        <img src="<%= relatedProduct.product_img && relatedProduct.product_img.length > 0 ? `/uploads/re-image/${relatedProduct.product_img[0]}` : '/uploads/re-image/default.jpeg' %>" 
                             alt="<%= relatedProduct.name %>" 
                             class="related-product-image"
                             onerror="this.onerror=null; this.src='/uploads/re-image/default.jpeg';">
                        <div class="related-product-info">
                            <h3 class="related-product-name"><%= relatedProduct.name %></h3>
                            <div class="related-product-price">
                                <% if (relatedProduct.hasValidOffer) { %>
                                    <span class="current-price">₹<%= relatedProduct.currentPrice %></span>
                                    <span class="original-price">₹<%= relatedProduct.originalPrice %></span>
                                <% } else { %>
                                    <span class="current-price">₹<%= relatedProduct.Sale_price %></span>
                                <% } %>
                            </div>
                        </div>
                    </div>
                <% }); %>
            </div>
        </div>
    <% } %>
</div>

<script>
    let stockLeft = <%= product.available_quantity %>;
    let currentQuantity = 1;
    let isZoomed = false;
    const ZOOM_LEVEL = 2.5;

    // Add image switching functionality
    function changeImage(thumbnail) {
        const mainImage = document.getElementById('mainImage');
        mainImage.src = thumbnail.src;
        
        // Remove active class from all thumbnails
        document.querySelectorAll('.thumbnail').forEach(thumb => {
            thumb.classList.remove('active');
        });
        
        // Add active class to clicked thumbnail
        thumbnail.classList.add('active');
    }

    // Set the first thumbnail as active on page load
    document.addEventListener('DOMContentLoaded', function() {
        const firstThumbnail = document.querySelector('.thumbnail');
        if (firstThumbnail) {
            firstThumbnail.classList.add('active');
        }
    });

    function changeQuantity(change) {
        const newQuantity = currentQuantity + change;
        if (newQuantity >= 1 && newQuantity <= stockLeft && newQuantity <= 5) {
            currentQuantity = newQuantity;
            document.getElementById('quantity').textContent = currentQuantity;
            document.getElementById('decrease-btn').disabled = currentQuantity <= 1;
            document.getElementById('increase-btn').disabled = currentQuantity >= stockLeft;
        }
    }

    function zoomImage(event) {
        const image = event.currentTarget.querySelector('.main-image');
        const container = event.currentTarget;
        const rect = container.getBoundingClientRect();

        // Calculate mouse position relative to container
        const x = (event.clientX - rect.left) / container.offsetWidth;
        const y = (event.clientY - rect.top) / container.offsetHeight;

        // Apply zoom
        image.style.transformOrigin = `${x * 100}% ${y * 100}%`;
        image.style.transform = `scale(${ZOOM_LEVEL})`;
        image.classList.add('zoomed');
        isZoomed = true;
    }

    function resetZoom(event) {
        const image = event.currentTarget.querySelector('.main-image');
        image.style.transform = 'scale(1)';
        image.classList.remove('zoomed');
        isZoomed = false;
    }

    async function addToCartHandler(event, productId) {
        event.preventDefault();
        
        <% if (!user) { %>
            Swal.fire({
                title: 'Login Required',
                text: 'Please login to add items to cart',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Login',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = '/login';
                }
            });
            return;
        <% } %>

        try {
            const quantity = parseInt(document.getElementById('quantity').textContent);
            console.log('Sending request with:', { productId, quantity });

            const response = await fetch('/add-to-cart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },
                credentials: 'include',
                body: JSON.stringify({
                    productId: productId,
                    quantity: quantity
                })
            });

            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(errorData.message || 'Failed to add product to cart');
            }

            const data = await response.json();
            console.log('Response:', data);

            if (data.success) {
                Swal.fire({
                    title: 'Success!',
                    text: 'Product added to cart successfully',
                    icon: 'success',
                    timer: 2000,
                    showConfirmButton: false
                }).then(() => {
                    window.location.href = '/cart';
                });
            } else {
                throw new Error(data.message || 'Failed to add product to cart');
            }
        } catch (error) {
            console.error('Error:', error);
            Swal.fire({
                title: 'Error!',
                text: error.message || 'Failed to add product to cart',
                icon: 'error'
            });
        }
    }

    // Add this function for wishlist functionality
    async function toggleWishlist(button, productId) {
        try {
            const response = await fetch('/toggle-wishlist', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    productId: productId
                })
            });

            const data = await response.json();
            
            if (response.ok) {
                button.classList.toggle('active');
                const icon = button.querySelector('i');
                if (button.classList.contains('active')) {
                    icon.classList.remove('far');
                    icon.classList.add('fas');
                } else {
                    icon.classList.remove('fas');
                    icon.classList.add('far');
                }
                
                Swal.fire({
                    icon: 'success',
                    title: 'Success!',
                    text: data.message,
                    showConfirmButton: false,
                    timer: 1500
                });
            } else {
                throw new Error(data.message || 'Failed to toggle wishlist');
            }
        } catch (error) {
            if (error.message === 'Please login to add items to wishlist') {
                window.location.href = '/login';
            } else {
                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: error.message || 'Something went wrong!',
                });
            }
        }
    }

    // Add this function to check initial wishlist status
    async function checkWishlistStatus() {
        const wishlistButton = document.querySelector('.wishlist-btn');
        const productId = '<%= product._id %>';
        try {
            const response = await fetch(`/wishlist-status/${productId}`);
            const data = await response.json();
            if (data.inWishlist) {
                wishlistButton.classList.add('active');
                const icon = wishlistButton.querySelector('i');
                icon.classList.remove('far');
                icon.classList.add('fas');
            }
        } catch (error) {
            console.error('Error checking wishlist status:', error);
        }
    }

    // Call on page load
    document.addEventListener('DOMContentLoaded', function() {
        checkWishlistStatus();
    });

    // Initialize quantity buttons state
    document.addEventListener('DOMContentLoaded', function() {
        document.getElementById('decrease-btn').disabled = true;
        document.getElementById('increase-btn').disabled = stockLeft <= 1;
    });
</script>

<%- include('../../Views/layouts/user/footer.ejs') %>
