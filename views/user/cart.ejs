<%- include('../layouts/user/header.ejs') %>

<div class="container-fluid cart-container py-5">
    <div class="row justify-content-center pt-5 px-4">
        <!-- Cart Items -->
        <div class="col-lg-8 mb-4">
            <div class="card border-0 shadow-sm rounded-4 overflow-hidden">
                <div class="card-body p-4">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <div>
                            <h4 class="mb-1 fw-bold">Shopping Cart</h4>
                            <p class="text-muted mb-0">
                                <%= cart && cart.items ? cart.items.length : 0 %> items in your cart
                            </p>
                        </div>
                        <a href="/shop" class="btn btn-outline-dark rounded-pill px-4">
                            <i class="fas fa-arrow-left me-2"></i>Continue Shopping
                        </a>
                    </div>

                    <% if (cart && cart.items && cart.items.length > 0) { %>
                        <div class="cart-items">
                            <% cart.items.forEach(item => { %>
                                <div class="cart-item <%= item.productId.available_quantity === 0 ? 'data-out-of-stock="true"' : '' %>" data-product-id="<%= item.productId._id %>">
                                    <div class="row align-items-center g-4">
                                        <!-- Product Image -->
                                        <div class="col-lg-2 col-md-3">
                                            <div class="product-image">
                                                <img src="<%= item.productId.product_img && item.productId.product_img.length > 0 ? `/uploads/re-image/${item.productId.product_img[0]}` : '/uploads/re-image/default.jpeg' %>" 
                                                    alt="<%= item.productId.name %>"
                                                    class="img-fluid"
                                                    onerror="this.src='/uploads/re-image/default.jpeg'">
                                            </div>
                                        </div>
                                        <!-- Product Details -->
                                        <div class="col-lg-4 col-md-4">
                                            <h6 class="product-name mb-2"><%= item.productId.name %></h6>
                                            <p class="text-muted mb-0">₹<%= item.price %></p>
                                            <% if (item.productId.available_quantity === 0) { %>
                                                <p class="text-danger fw-bold mb-0"><i class="fas fa-exclamation-circle"></i> Out of Stock</p>
                                            <% } else if (item.quantity > item.productId.available_quantity) { %>
                                                <p class="text-warning mb-0"><i class="fas fa-exclamation-triangle"></i> Only <%= item.productId.available_quantity %> items in stock</p>
                                            <% } %>
                                        </div>
                                        <!-- Quantity Controls -->
                                        <div class="col-lg-3 col-md-3">
                                            <div class="quantity-controls d-flex align-items-center <%= item.productId.available_quantity === 0 ? 'opacity-50' : '' %>">
                                                <button class="btn btn-sm quantity-btn minus" 
                                                        onclick="updateQuantity('<%= item.productId._id %>', 'decrease')"
                                                        <%= (item.quantity <= 1 || item.productId.available_quantity === 0) ? 'disabled' : '' %>>
                                                    <i class="fas fa-minus"></i>
                                                </button>
                                                <input type="number" class="form-control quantity-input mx-2" 
                                                       value="<%= item.quantity %>" 
                                                       min="1" 
                                                       max="<%= Math.min(5, item.productId.available_quantity) %>"
                                                       <%= item.productId.available_quantity === 0 ? 'disabled' : '' %>
                                                       onchange="updateQuantity('<%= item.productId._id %>', 'set', this.value)"
                                                       data-product-id="<%= item.productId._id %>">
                                                <button class="btn btn-sm quantity-btn plus" 
                                                        onclick="updateQuantity('<%= item.productId._id %>', 'increase')"
                                                        <%= (item.quantity >= 5 || item.quantity >= item.productId.available_quantity || item.productId.available_quantity === 0) ? 'disabled' : '' %>>
                                                    <i class="fas fa-plus"></i>
                                                </button>
                                            </div>
                                        </div>
                                        <!-- Total Price -->
                                        <div class="col-lg-2 col-md-1">
                                            <p class="mb-0 fw-bold">₹<%= item.totalPrice %></p>
                                        </div>
                                        <!-- Remove Button -->
                                        <div class="col-lg-1 col-md-1 text-end">
                                            <button class="btn-remove" onclick="removeItem('<%= item.productId._id %>')">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            <% }); %>
                        </div>
                    <% } else { %>
                        <div class="empty-cart text-center py-5">
                            <i class="fas fa-shopping-cart fa-3x mb-3"></i>
                            <h3>Your cart is empty</h3>
                            <p class="text-muted">Add items to your cart to continue shopping</p>
                            <a href="/" class="btn btn-dark rounded-pill mt-3">Continue Shopping</a>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>

        <!-- Order Summary -->
        <div class="col-lg-4">
            <div class="card border-0 shadow-sm rounded-4">
                <div class="card-body p-4">
                    <h5 class="fw-bold mb-4">Order Summary</h5>
                    <% if (cart && cart.items && cart.items.length > 0) { %>
                        <div class="d-flex justify-content-between mb-3">
                            <span>Subtotal</span>
                            <span>₹<%= cart.total %></span>
                        </div>
                        <hr>
                        <div class="d-flex justify-content-between mb-4">
                            <span class="fw-bold">Total</span>
                            <span class="fw-bold">₹<%= cart.total %></span>
                        </div>
                        <% if (typeof hasInsufficientStock !== 'undefined' && hasInsufficientStock) { %>
                            <button class="btn btn-dark w-100 rounded-pill" disabled onclick="showStockAlert()">
                                Proceed to Checkout
                            </button>
                        <% } else { %>
                            <a href="/checkout" class="btn btn-dark w-100 rounded-pill">
                                Proceed to Checkout
                            </a>
                        <% } %>
                    <% } %>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.cart-container {
    background-color: #f8f9fa;
    min-height: 100vh;
}

.cart-item {
    padding: 1.5rem;
    border-bottom: 1px solid #eee;
    transition: all 0.3s ease;
}

.cart-item:last-child {
    border-bottom: none;
}

.cart-item:hover {
    background-color: #f8f9fa;
}

.product-image {
    aspect-ratio: 1;
    overflow: hidden;
    background-color: #fff;
    border: 1px solid #eee;
}

.product-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.product-name {
    color: #2d3436;
    font-weight: 500;
    font-size: 1.1rem;
}

/* Quantity Controls */
.quantity-controls {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    background: #fff;
    padding: 0.25rem;
    border-radius: 50px;
    border: 1px solid #eee;
    width: fit-content;
}

.quantity-btn {
    border: none;
    background: none;
    width: 32px;
    height: 32px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s ease;
}

.quantity-btn:hover:not(:disabled) {
    background-color: #f1f1f1;
}

.quantity-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

.quantity-input {
    width: 50px;
    border: none;
    text-align: center;
    font-weight: 500;
    background: transparent;
}

.quantity-input::-webkit-inner-spin-button,
.quantity-input::-webkit-outer-spin-button {
    display: none;
}

/* Remove Button */
.btn-remove {
    border: none;
    background: none;
    width: 32px;
    height: 32px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #dc3545;
    opacity: 0.7;
    transition: all 0.2s ease;
}

.btn-remove:hover {
    opacity: 1;
    background-color: #dc35451a;
}

/* Empty Cart */
.empty-cart-icon {
    font-size: 4rem;
    color: #adb5bd;
}

/* Summary Card */
.summary-item {
    font-size: 0.95rem;
}

/* Out of stock styling */
.cart-item[data-out-of-stock="true"] {
    opacity: 0.8;
    background-color: #f8f9fa;
}

.text-warning {
    color: #ffa502 !important;
}

/* Responsive */
@media (max-width: 768px) {
    .cart-item {
        padding: 1rem;
    }
    
    .product-name {
        font-size: 1rem;
    }
    
    .quantity-controls {
        margin-top: 0.5rem;
    }
}
</style>

<script>
function updateQuantity(productId, action, value) {
    let quantity;
    const input = document.querySelector(`[data-product-id="${productId}"] .quantity-input`);
    const cartItem = document.querySelector(`[data-product-id="${productId}"]`);
    const priceElement = cartItem.querySelector('.text-muted');
    const totalPriceElement = cartItem.querySelector('.fw-bold');
    const price = parseFloat(priceElement.textContent.replace('₹', ''));

    if (action === 'increase') {
        quantity = parseInt(input.value) + 1;
    } else if (action === 'decrease') {
        quantity = parseInt(input.value) - 1;
    } else if (action === 'set') {
        quantity = parseInt(value);
    }

    // Update UI immediately for better user experience
    input.value = quantity;
    const newTotal = price * quantity;
    totalPriceElement.textContent = '₹' + newTotal;
    updateCartTotal();

    // Send update to server
    fetch('/update-cart', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            productId: productId,
            quantity: quantity
        })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            // Update cart badge in header
            const cartBadge = document.querySelector('.cart-badge');
            if (cartBadge) {
                cartBadge.textContent = data.cartCount;
            }
            
            // Update cart total
            updateCartTotal();
        } else {
            // Revert changes if server update fails
            input.value = data.quantity || 1;
            totalPriceElement.textContent = '₹' + (price * (data.quantity || 1));
            updateCartTotal();
            
            // Show error message
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: data.message || 'Failed to update cart',
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000
            });
        }
    })
    .catch(error => {
        console.error('Error:', error);
        // Show error toast
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: 'Failed to update cart',
            toast: true,
            position: 'top-end',
            showConfirmButton: false,
            timer: 3000
        });
    });
}

function updateCartTotal() {
    const cartItems = document.querySelectorAll('.cart-item');
    let total = 0;
    
    cartItems.forEach(item => {
        const totalPriceElement = item.querySelector('.fw-bold');
        const itemTotal = parseFloat(totalPriceElement.textContent.replace('₹', ''));
        total += itemTotal;
    });

    // Update subtotal and total in order summary
    const subtotalElement = document.querySelector('.d-flex.justify-content-between.mb-3 span:last-child');
    const totalElement = document.querySelector('.d-flex.justify-content-between.mb-4 span:last-child');
    
    if (subtotalElement && totalElement) {
        subtotalElement.textContent = '₹' + total;
        totalElement.textContent = '₹' + total;
    }
}

function removeItem(productId) {
    Swal.fire({
        title: 'Remove Item',
        text: 'Are you sure you want to remove this item from your cart?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, remove it!'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch('/remove-from-cart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    productId: productId
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Remove item from DOM
                    const cartItem = document.querySelector(`[data-product-id="${productId}"]`);
                    cartItem.remove();
                    
                    // Update cart badge
                    const cartBadge = document.querySelector('.cart-badge');
                    if (cartBadge) {
                        cartBadge.textContent = data.cartCount;
                    }
                    
                    // Update cart total
                    updateCartTotal();
                    
                    // Check if cart is empty
                    const cartItems = document.querySelectorAll('.cart-item');
                    if (cartItems.length === 0) {
                        location.reload(); // Reload to show empty cart message
                    }

                    // Show success message
                    Swal.fire({
                        icon: 'success',
                        title: 'Item Removed',
                        text: 'Item has been removed from your cart',
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: data.message || 'Failed to remove item',
                        toast: true,
                        position: 'top-end',
                        showConfirmButton: false,
                        timer: 3000
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'Failed to remove item',
                    toast: true,
                    position: 'top-end',
                    showConfirmButton: false,
                    timer: 3000
                });
            });
        }
    });
}

// Initialize total on page load
document.addEventListener('DOMContentLoaded', function() {
    updateCartTotal();
});
</script>

<%- include('../layouts/user/footer.ejs') %>
