<%- include('../layouts/user/header.ejs') %>

<div class="container-fluid cart-container py-5">
    <div class="row justify-content-center pt-5 px-4">
        <!-- Cart Items -->
        <div class="col-lg-8 mb-4">
            <div class="card border-0 shadow-sm rounded-4 overflow-hidden">
                <div class="card-body p-4">
                    <div class="d-flex justify-content-between align-items-center mb-4">
                        <div>
                            <h4 class="mb-1 fw-bold">Shopping Cart</h4>
                            <p class="text-muted mb-0">
                                <%= cart && cart.items ? cart.items.length : 0 %> items in your cart
                            </p>
                        </div>
                        <a href="/shop" class="btn btn-outline-dark rounded-pill px-4">
                            <i class="fas fa-arrow-left me-2"></i>Continue Shopping
                        </a>
                    </div>

                    <% if (cart && cart.items && cart.items.length > 0) { %>
                        <div class="cart-items">
                            <% cart.items.forEach(item => { %>
                                <div class="cart-item <%= item.productId.available_quantity === 0 ? 'data-out-of-stock="true"' : '' %>" data-product-id="<%= item.productId._id %>">
                                    <div class="row align-items-center g-4">
                                        <!-- Product Image -->
                                        <div class="col-lg-2 col-md-3">
                                            <div class="product-image">
                                                <img src="<%= item.productId.product_img && item.productId.product_img.length > 0 ? `/uploads/re-image/${item.productId.product_img[0]}` : '/uploads/re-image/default.jpeg' %>" 
                                                    alt="<%= item.productId.name %>"
                                                    class="img-fluid"
                                                    onerror="this.src='/uploads/re-image/default.jpeg'">
                                            </div>
                                        </div>
                                        <!-- Product Details -->
                                        <div class="col-lg-4 col-md-4">
                                            <h6 class="product-name mb-2"><%= item.productId.name %></h6>
                                            <div class="product-price mb-2">
                                                <% if (item.offerPercentage > 0) { %>
                                                    <div class="d-flex flex-column">
                                                        <div class="mb-1">
                                                            <span class="original-price text-decoration-line-through text-muted small">₹<%= item.originalPrice %></span>
                                                            <span class="offer-price text-danger fw-bold ms-2">₹<%= item.currentPrice %></span>
                                                        </div>
                                                        <% if (item.offerType === 'category') { %>
                                                            <span class="offer-badge bg-success text-white px-2 py-1 rounded-pill small" style="width: fit-content">
                                                                Category <%= item.offerPercentage %>% OFF
                                                            </span>
                                                        <% } else { %>
                                                            <span class="offer-badge bg-success text-white px-2 py-1 rounded-pill small" style="width: fit-content">
                                                                Product <%= item.offerPercentage %>% OFF
                                                            </span>
                                                        <% } %>
                                                    </div>
                                                <% } else { %>
                                                    <span class="fw-bold">₹<%= item.originalPrice %></span>
                                                <% } %>
                                            </div>
                                            <% if (item.productId.available_quantity === 0) { %>
                                                <p class="text-danger fw-bold mb-0"><i class="fas fa-exclamation-circle"></i> Out of Stock</p>
                                            <% } else if (item.quantity > item.productId.available_quantity) { %>
                                                <p class="text-warning mb-0"><i class="fas fa-exclamation-triangle"></i> Only <%= item.productId.available_quantity %> items in stock</p>
                                            <% } %>
                                        </div>
                                        <!-- Quantity Controls -->
                                        <div class="col-lg-3 col-md-3">
                                            <div class="quantity-controls d-flex align-items-center <%= item.productId.available_quantity === 0 ? 'opacity-50' : '' %>">
                                                <button class="btn btn-sm quantity-btn minus" 
                                                        onclick="updateQuantity('<%= item.productId._id %>', 'decrease')"
                                                        <%= item.productId.available_quantity === 0 ? 'disabled' : '' %>>
                                                    <i class="fas fa-minus"></i>
                                                </button>
                                                <input type="number" class="quantity-input" value="<%= item.quantity %>" max="<%= item.productId.available_quantity %>" min="1" readonly>
                                                <button class="btn btn-sm quantity-btn plus"
                                                        onclick="updateQuantity('<%= item.productId._id %>', 'increase')"
                                                        <%= item.productId.available_quantity === 0 || item.quantity >= item.productId.available_quantity ? 'disabled' : '' %>>
                                                    <i class="fas fa-plus"></i>
                                                </button>
                                            </div>
                                        </div>
                                        <!-- Total Price -->
                                        <div class="col-lg-2 col-md-1">
                                            <p class="item-subtotal mb-0 fw-bold">₹<%= item.totalPrice %></p>
                                        </div>
                                        <!-- Remove Button -->
                                        <div class="col-lg-1 col-md-1 text-end">
                                            <button class="btn-remove" onclick="removeItem('<%= item.productId._id %>')">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            <% }); %>
                        </div>
                    <% } else { %>
                        <div class="empty-cart text-center py-5">
                            <i class="fas fa-shopping-cart fa-3x mb-3"></i>
                            <h3>Your cart is empty</h3>
                            <p class="text-muted">Add items to your cart to continue shopping</p>
                            <a href="/" class="btn btn-dark rounded-pill mt-3">Continue Shopping</a>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>

        <!-- Order Summary -->
        <div class="col-lg-4">
            <div class="card border-0 shadow-sm rounded-4">
                <div class="card-body p-4">
                    <h4 class="fw-bold mb-4">Order Summary</h4>
                    <div class="d-flex justify-content-between mb-3">
                        <span>Subtotal</span>
                        <span class="cart-subtotal">₹<%= cart.subtotal || 0 %></span>
                    </div>
                    <% if (cart.items && cart.items.length > 0) { %>
                        <div class="d-flex justify-content-between mb-3">
                            <span>Items</span>
                            <span><%= cart.items.length %></span>
                        </div>
                    <% } %>
                    <hr>
                    <div class="d-flex justify-content-between mb-4">
                        <span class="fw-bold">Total</span>
                        <span class="cart-total fw-bold">₹<%= cart.total || 0 %></span>
                    </div>
                    <% if (cart.items && cart.items.length > 0) { %>
                        <% 
                        let hasOutOfStock = false;
                        cart.items.forEach(item => {
                            if (item.productId.available_quantity === 0 || item.quantity > item.productId.available_quantity) {
                                hasOutOfStock = true;
                            }
                        });
                        %>
                        <% if (hasOutOfStock) { %>
                            <button class="btn btn-dark w-100 rounded-pill" disabled title="Some items are out of stock">
                                Cannot Checkout - Items Out of Stock
                            </button>
                        <% } else { %>
                            <a href="/checkout" class="btn btn-dark w-100 rounded-pill">
                                Proceed to Checkout
                            </a>
                        <% } %>
                    <% } else { %>
                        <button class="btn btn-dark w-100 rounded-pill" disabled>
                            Cart is Empty
                        </button>
                    <% } %>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.cart-container {
    background-color: #f8f9fa;
    min-height: 100vh;
}

.cart-item {
    padding: 1.5rem;
    border-bottom: 1px solid #eee;
    transition: all 0.3s ease;
}

.cart-item:last-child {
    border-bottom: none;
}

.cart-item:hover {
    background-color: #f8f9fa;
}

.product-image {
    aspect-ratio: 1;
    overflow: hidden;
    background-color: #fff;
    border: 1px solid #eee;
}

.product-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.product-name {
    color: #2d3436;
    font-weight: 500;
    font-size: 1.1rem;
}

/* Quantity Controls */
.quantity-controls {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    background: #fff;
    padding: 0.25rem;
    border-radius: 50px;
    border: 1px solid #eee;
    width: fit-content;
}

.quantity-btn {
    border: none;
    background: none;
    width: 32px;
    height: 32px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.2s ease;
}

.quantity-btn:hover:not(:disabled) {
    background-color: #f1f1f1;
}

.quantity-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

.quantity-input {
    width: 50px;
    border: none;
    text-align: center;
    font-weight: 500;
    background: transparent;
}

.quantity-input::-webkit-inner-spin-button,
.quantity-input::-webkit-outer-spin-button {
    display: none;
}

/* Remove Button */
.btn-remove {
    border: none;
    background: none;
    width: 32px;
    height: 32px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #dc3545;
    opacity: 0.7;
    transition: all 0.2s ease;
}

.btn-remove:hover {
    opacity: 1;
    background-color: #dc35451a;
}

/* Empty Cart */
.empty-cart-icon {
    font-size: 4rem;
    color: #adb5bd;
}

/* Summary Card */
.summary-item {
    font-size: 0.95rem;
}

/* Out of stock styling */
.cart-item[data-out-of-stock="true"] {
    opacity: 0.8;
    background-color: #f8f9fa;
}

.text-warning {
    color: #ffa502 !important;
}

/* Responsive */
@media (max-width: 768px) {
    .cart-item {
        padding: 1rem;
    }
    
    .product-name {
        font-size: 1rem;
    }
    
    .quantity-controls {
        margin-top: 0.5rem;
    }
}
</style>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
function updateQuantity(productId, action) {
    const cartItem = document.querySelector(`[data-product-id="${productId}"]`);
    if (!cartItem) return;

    const quantityInput = cartItem.querySelector('.quantity-input');
    const currentQuantity = parseInt(quantityInput.value);
    let newQuantity = currentQuantity;
    
    if (action === 'increase') {
        newQuantity = currentQuantity + 1;
    } else if (action === 'decrease') {
        newQuantity = currentQuantity - 1;
    }

    // Show loading state
    const buttons = cartItem.querySelectorAll('.quantity-btn');
    buttons.forEach(btn => {
        btn.disabled = true;
        btn.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
    });
    quantityInput.disabled = true;

    // Update cart on server
    fetch('/update-cart', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ productId, quantity: newQuantity })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            // Update quantity input
            quantityInput.value = data.quantity;

            // Update item total price
            const itemTotal = cartItem.querySelector('.item-subtotal');
            if (itemTotal) {
                itemTotal.textContent = `₹${data.total.toFixed(2)}`;
            }

            // Update all cart totals
            updateCartTotals();

            // Update button states
            const minusBtn = cartItem.querySelector('.quantity-btn.minus');
            const plusBtn = cartItem.querySelector('.quantity-btn.plus');
            
            if (minusBtn) {
                minusBtn.disabled = data.quantity <= 1;
                minusBtn.innerHTML = '<i class="fas fa-minus"></i>';
            }
            
            if (plusBtn) {
                plusBtn.disabled = data.quantity >= data.maxQuantity;
                plusBtn.innerHTML = '<i class="fas fa-plus"></i>';
            }

            // Show success message if needed
            if (data.message) {
                showAlert(data.message, 'success');
            }
        } else {
            // Revert quantity and show error
            quantityInput.value = currentQuantity;
            showAlert(data.message || 'Failed to update cart', 'error');
        }
    })
    .catch(error => {
        console.error('Error:', error);
        quantityInput.value = currentQuantity;
        showAlert('Failed to update cart', 'error');
    })
    .finally(() => {
        // Reset loading state
        buttons.forEach(btn => {
            btn.disabled = false;
            btn.innerHTML = btn.classList.contains('plus') ? 
                '<i class="fas fa-plus"></i>' : 
                '<i class="fas fa-minus"></i>';
        });
        quantityInput.disabled = false;
    });
}

function updateCartTotals() {
    // Calculate subtotal from all item totals
    let subtotal = 0;
    const itemTotals = document.querySelectorAll('.item-subtotal');
    itemTotals.forEach(itemTotal => {
        const price = parseFloat(itemTotal.textContent.replace('₹', ''));
        if (!isNaN(price)) {
            subtotal += price;
        }
    });

    // Update subtotal display
    const subtotalElements = document.querySelectorAll('.cart-subtotal');
    subtotalElements.forEach(el => {
        el.textContent = `₹${subtotal.toFixed(2)}`;
    });

    // Update total display (add any additional costs here if needed)
    const totalElements = document.querySelectorAll('.cart-total');
    totalElements.forEach(el => {
        el.textContent = `₹${subtotal.toFixed(2)}`;
    });

    // Update order summary if it exists
    const orderSubtotal = document.querySelector('.order-subtotal');
    if (orderSubtotal) {
        orderSubtotal.textContent = `₹${subtotal.toFixed(2)}`;
    }

    const orderTotal = document.querySelector('.order-total');
    if (orderTotal) {
        orderTotal.textContent = `₹${subtotal.toFixed(2)}`;
    }
}

function showAlert(message, type) {
    Swal.fire({
        text: message,
        icon: type,
        toast: true,
        position: 'top-end',
        showConfirmButton: false,
        timer: 3000,
        timerProgressBar: true
    });
}

// Calculate initial totals when page loads
document.addEventListener('DOMContentLoaded', function() {
    updateCartTotals();
});

function removeItem(productId) {
    Swal.fire({
        title: 'Are you sure?',
        text: "Do you want to remove this item from cart?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, remove it!'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch('/remove-from-cart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    productId: productId
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Show success message with SweetAlert2
                    Swal.fire({
                        title: 'Deleted!',
                        text: 'Your item has been removed from cart.',
                        icon: 'success',
                        confirmButtonColor: '#3085d6',
                        showConfirmButton: false,
                        timer: 1000
                    }).then(() => {
                        // Always refresh the page after successful removal
                        window.location.reload();
                    });
                } else {
                    // Show error message
                    Swal.fire({
                        title: 'Error!',
                        text: data.message || 'Failed to remove item',
                        icon: 'error',
                        confirmButtonColor: '#3085d6'
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    title: 'Error!',
                    text: 'Failed to remove item from cart',
                    icon: 'error',
                    confirmButtonColor: '#3085d6'
                });
            });
        }
    });
}
</script>

<style>
.colored-toast.swal2-icon-warning {
    background-color: #f8bb86 !important;
    color: white !important;
}
.colored-toast.swal2-icon-error {
    background-color: #f27474 !important;
    color: white !important;
}
.colored-toast .swal2-title {
    color: white !important;
    font-size: 1rem !important;
}
.colored-toast .swal2-close {
    color: white !important;
}
.colored-toast .swal2-html-container {
    color: white !important;
    font-size: 0.875rem !important;
}
</style>

<%- include('../layouts/user/footer.ejs') %>